{"hash":"0e25278c1ae993b0d257bf3597b22a4e0ac92a6f","data":{"post":{"title":"How to generate redirects in Gridsome","path":"/how-to-generate-redirects-in-gridsome/","date":"1. January 2020","timeToRead":2,"tags":[{"id":"JavaScript","title":"JavaScript","path":"/tag/JavaScript/"},{"id":"Gridsome","title":"Gridsome","path":"/tag/Gridsome/"}],"description":"I've switched this site from a hosted Wordpress solution, to a static site generated by Gridsome. Here's a brief word on creating redirects for the old post URLs.","content":"<p>I've switched this site from a hosted Wordpress solution, to a static site generated by <a href=\"https://gridsome.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gridsome</a>. Here's a brief word on creating redirects for the old post URLs.</p>\n<p>This build uses the <a href=\"https://gridsome.org/plugins/@gridsome/source-filesystem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gridsome/source-filesystem</a> to  import the content from a set of Markdown files.  Each file exists as a page on this site, for example:</p>\n<p><a href=\"http://www.andrewrowland.com/how-to-generate-redirects-in-gridsome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.andrewrowland.com/how-to-generate-redirects-in-gridsome/</a></p>\n<p>In the site's previous incarnation they would be found on:</p>\n<p><a href=\"http://www.andrewrowland.com/article/display/how-to-generate-redirects-in-gridsome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.andrewrowland.com/article/display/how-to-generate-redirects-in-gridsome/</a></p>\n<p>I doubt anyone would have bookmarked any, but it would be nice to retain the old URLs, and redirect to the appropriate pages.  Many hosts provide a mechanism to administer redirects.  I'm using <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github Pages</a>, which doesn't if you're not using Jekyll. If you are, <a href=\"https://github.com/jekyll/jekyll-redirect-from#redirect-to\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this might be useful</a>.</p>\n<p>So for each post, we need to render an additional file for the old URL.  This requires an amendment to the <strong>gridsome.config.js</strong> configuration. For a Post type this involves switching to an array of config objects.  In this case, I've added an additional configuration for the redirect:</p>\n<pre class=\"language-text\"><code class=\"language-text\">module.exports = {\n  templates: {\n    Post: [\n      {\n        path: &#39;/:title&#39;\n      },\n      {\n        name: &#39;redirects&#39;,\n        path: &#39;/article/display/:title&#39;,\n        component: &#39;./src/templates/Redirect.vue&#39;\n      }\n    ],\n    Tag: &#39;/tag/:id&#39;\n  }\n}</code></pre>\n<p>If you look at the component property I've added a template for the rendered file. It's a minimal template designed to output the appropriate meta tag to perform the redirect:</p>\n<pre class=\"language-text\"><code class=\"language-text\">&lt;template&gt;&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  metaInfo() {\n    return {\n        title: `Redirecting to ${this.$page.post.path}`,\n        meta: [\n            { &#39;http-equiv&#39;: &#39;refresh&#39;, content: `0; URL=${this.$page.post.path}`}\n        ],\n        link: [\n            { rel: &#39;canonical&#39;, href: `http://www.andrewrowland.com${this.$page.post.path}` }\n        ]\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;page-query&gt;\nquery Redirect ($id: ID!) {\n  post: post (id: $id) {\n    path\n  }\n}\n&lt;/page-query&gt;</code></pre>\n<p>Now, when we run a build, two files are generated for each post.  One for the post itself, and one for the redirect.</p>\n<p>I'm new to the framework, so if anyone knows of a better way to achieve this, please <a href=\"mailto:mailATandrewrowlandDOTcom\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">let me know</a>.</p>\n<p>I guess it could for something on the <a href=\"/404\">404</a> page to check for the <code class=\"language-text\">/display/article</code> slug, and redirect. That would involve JavaScript, and this felt better.</p>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/gridsome.ceeee9c.4295d12e6412816cc09746301350a8fa.png","size":{"width":443,"height":81},"sizes":"(max-width: 443px) 100vw, 443px","srcset":["/assets/static/gridsome.ceeee9c.4295d12e6412816cc09746301350a8fa.png 443w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 443 81' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-e2a5623a638a44ec5e6ae56e41ca4e61'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-e2a5623a638a44ec5e6ae56e41ca4e61)' width='443' height='81' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAMCAYAAADS87vJAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAFMklEQVRIx81W2XIaRxTVF6SSSMDsKwzrMAw7w44FaEES2ixklS2lbFlxUsqD40qlKpXKp5/c7gGEMH5LnDzc6uHO7abv6XNOz5amaVAUGfFkGqMXfei6BlVVwfI8dP35uB76hlHXNtfO49n6/3FsLTbDxkVoi5yiQInGoIgSlJgAVZKgygpU%2bq1KMq9VBJH/ZqMiiuHIn%2be1VCOxeTTKsozV//tfALDYjG6YKBZ9GHTSqho2rzkOEoMWrEIWzv4AdsmD3fAR71RhZhxoNMeulWDxfAl2uQC7XoLTayBeL8Nw4jAMA56XpzUV1BtNpJNJDsRmNqifAfNvA7UEwKBmXNflG9U0nZ%2b24fsof7pH7mKE3P0N0qdjpA67yFwfIzdqw6vWkHtzjszZHrzHW2QvJkifjwigOlJHYyT7AWzTQqfbhmloGI32OQBMcosN6PNYNLr6W/kKbNkKaa9x2i8lMP/TuG2jkHNpjEPc2SZ/MOnUDciiQCFCkyUIkR2IkW3ImgyFQGOhE/XZyUvEoohANSSJGNUbdgIqMUyQQgBYgzF6ZsGYJ9G8KEmHvWcgWIb%2blRhAGzVtB912k5rUl0BYlsUNTSVGFNpD1MZnqO3PUBvuYnD9MwazB3Qvb9GbfUBreo1csUYAWQSYiY7v4rJZwn6tgKOgjPN2Gb1iHgc1D4WkjVYhh1m/jv2Ki37RxW7NR5ekdtQqY1ylOTQvFTchMyn%2bA3L40twVABJo1KpL%2bnEAiAEhCDoqo1PURsfIN0doHE7Rv3yD5vQWkw%2b/ovfqEf2b93BLDRhEeYk07mVSOKRGzoICJuQLrMle2cPrFw00sknkUw4BU8JFi0UZQ6rdq/s461RwRH7ScR0YiSSCoApFlkKWruxt/VlRvgzO0zt1uc7GW2DdpXnzc4DE2A4ZpcUZIsWinPqyEEXk228g7HxPsU0bJSpbcX6VSpIImeolko0gxBCLRiGSPJgkGKAWhSiH9N8h2kdFmfzC4BJgOSYDSaHNUx1jgTFn5mJk8jINnTclknQc26JGFaoNvYPlmKQE/s7k78Lmnxvt1vI7wKHvgN0B/cE6A0x%2bQ9QPrtA5u0Xr/B69yyuc/vIXDt7/iYOH39E6miGYXJE8pgiOqe76HYZ3j2idXKH78gea9wrDt4/wgz4xLY64ZSDI5zBtFrnPnLeqeN2rYNIo4jgowk8l4GfTuGxXcDdsYNqq4HZQJZ/RMCTWnDXL6HhpuNkMHsYBpmS6RwGxh2RWTDsoEPtmxKRpu4oJSSxHt5FlW5sZEJ62wnWeTqXCE19hADMz9pyrdVBoDZDyqnAbLVT6e/A7BzyXLTfgNftI5gtwXB/NizuUe2Mk3BIKnV0UO0P4A7oBvAqBaRATZCRoQ2WSgkWn3iE/6PkZFLMpLguXtJ9JOhhXPBySZ5QpX88l%2bb7S1EzTy6KUTvC99f0sam4GDfKPY/Ich1gR0Hp7lTyaNPYLaSgaAd4KSN7KZgmwheJxGzadxqppLCXAKCcw2m9zNqgK0XT7O8pFuLMn0jmYxBR2kyhcLlFoJIGkSU6uiHyuGI1AppxlmnDMkP7S/ENpcRMscgqXY3gjRChYnlGZrc/kIPDap7nCfC4DlkmA5QW%2bZiinTd6xAgBpybTpru5ibzggXRnPJMAaY9ff4O4TBjfvsPv2I9oX1zj46Q%2b0L%2b8xefiNTJCMcPYjehc38LsjONkcl1KeqPjxpM/d/oROZ1Dx6STp44pkYDNw1%2b7%2bdfNazYfm/PS8WvO54z/N1dcaXr8N/gZbIFP/DSl4IQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}}},"context":{}}