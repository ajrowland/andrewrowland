{"hash":"0e25278c1ae993b0d257bf3597b22a4e0ac92a6f","data":{"tag":{"title":"Gridsome","belongsTo":{"edges":[{"node":{"title":"How to generate redirects in Gridsome","path":"/how-to-generate-redirects-in-gridsome/","date":"1. January 2020","timeToRead":2,"description":"I've switched this site from a hosted Wordpress solution, to a static site generated by Gridsome. Here's a brief word on creating redirects for the old post URLs.","content":"<p>I've switched this site from a hosted Wordpress solution, to a static site generated by <a href=\"https://gridsome.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gridsome</a>. Here's a brief word on creating redirects for the old post URLs.</p>\n<p>This build uses the <a href=\"https://gridsome.org/plugins/@gridsome/source-filesystem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gridsome/source-filesystem</a> to  import the content from a set of Markdown files.  Each file exists as a page on this site, for example:</p>\n<p><a href=\"http://www.andrewrowland.com/how-to-generate-redirects-in-gridsome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.andrewrowland.com/how-to-generate-redirects-in-gridsome/</a></p>\n<p>In the site's previous incarnation they would be found on:</p>\n<p><a href=\"http://www.andrewrowland.com/article/display/how-to-generate-redirects-in-gridsome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.andrewrowland.com/article/display/how-to-generate-redirects-in-gridsome/</a></p>\n<p>I doubt anyone would have bookmarked any, but it would be nice to retain the old URLs, and redirect to the appropriate pages.  Many hosts provide a mechanism to administer redirects.  I'm using <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github Pages</a>, which doesn't if you're not using Jekyll. If you are, <a href=\"https://github.com/jekyll/jekyll-redirect-from#redirect-to\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this might be useful</a>.</p>\n<p>So for each post, we need to render an additional file for the old URL.  This requires an amendment to the <strong>gridsome.config.js</strong> configuration. For a Post type this involves switching to an array of config objects.  In this case, I've added an additional configuration for the redirect:</p>\n<pre class=\"language-text\"><code class=\"language-text\">module.exports = {\n  templates: {\n    Post: [\n      {\n        path: &#39;/:title&#39;\n      },\n      {\n        name: &#39;redirects&#39;,\n        path: &#39;/article/display/:title&#39;,\n        component: &#39;./src/templates/Redirect.vue&#39;\n      }\n    ],\n    Tag: &#39;/tag/:id&#39;\n  }\n}</code></pre>\n<p>If you look at the component property I've added a template for the rendered file. It's a minimal template designed to output the appropriate meta tag to perform the redirect:</p>\n<pre class=\"language-text\"><code class=\"language-text\">&lt;template&gt;&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  metaInfo() {\n    return {\n        title: `Redirecting to ${this.$page.post.path}`,\n        meta: [\n            { &#39;http-equiv&#39;: &#39;refresh&#39;, content: `0; URL=${this.$page.post.path}`}\n        ],\n        link: [\n            { rel: &#39;canonical&#39;, href: `http://www.andrewrowland.com${this.$page.post.path}` }\n        ]\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;page-query&gt;\nquery Redirect ($id: ID!) {\n  post: post (id: $id) {\n    path\n  }\n}\n&lt;/page-query&gt;</code></pre>\n<p>Now, when we run a build, two files are generated for each post.  One for the post itself, and one for the redirect.</p>\n<p>I'm new to the framework, so if anyone knows of a better way to achieve this, please <a href=\"mailto:mailATandrewrowlandDOTcom\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">let me know</a>.</p>\n<p>I guess I could do something on the <a href=\"/404\">404</a> page to check for the <code class=\"language-text\">/display/article</code> slug, and redirect. That would involve JavaScript, so this felt like a better solution.</p>\n"}}]}}},"context":{}}