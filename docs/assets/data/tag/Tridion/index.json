{"hash":"264f590cff87740fcac41480b7d1f4354eb4684c","data":{"tag":{"title":"Tridion","belongsTo":{"edges":[{"node":{"title":"Tridion Business Connector client","path":"/tridion-business-connector-client/","date":"19. January 2009","timeToRead":2,"description":"A bit of a niche entry this one. Will only be of interest to those who use Tridion, one of the more 'heavyweight' CMS solutions.","content":"<p>A bit of a niche entry this one. Will only be of interest to those who use Tridion, one of the more 'heavyweight' CMS solutions.</p>\n<p>I generally have a number of repetitive tasks that are extremely tedious to accomplish using the browser based GUI. So I constructed a simple <a href=\"/downloads/bcclient.exe\">command line tool</a> that allows me to script tasks using a SOAP interface known as the Tridion Business Connector.</p>\n<p>The client takes the following arguments:</p>\n<pre class=\"language-text\"><code class=\"language-text\">bcclient.exe /h [hostname] /u [user] /p [password] /d [domain] /x &quot;[request XML]&quot;</code></pre>\n<p>Why did I build this? Very useful when called via scripting tools. In my case, <a href=\"https://www.perl.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Perl</a>.</p>\n<p>A simple Perl script that will return the XML for a Tridion Component would look something like this:</p>\n<pre class=\"language-text\"><code class=\"language-text\">use strict;\n\nmy $requestXML = q{\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n    &lt;tcmapi:Message version=&quot;5.0&quot; from=&quot;AndyRowlandSoapClient&quot; failOnError=&quot;true&quot; xmlns:tcmapi=&quot;http://www.tridion.com/ContentManager/5.0/TCMAPI&quot;&gt;\n    &lt;tcmapi:Request ID=&quot;GetItemRequest&quot; preserve=&quot;true&quot;&gt;\n    &lt;tcmapi:GetItem itemURI=&quot;tcm:12-345&quot; /&gt;\n    &lt;/tcmapi:Request&gt;\n    &lt;/tcmapi:Message&gt;\n};\n\n$requestXML =~ s/&quot;/\\\\&quot;/g;\n\nmy $responseXML = `bcclient.exe /h MyTCMHost /u andyrowland /p mypassword /d MYDOMAIN /x &quot;$requestXML&quot;`;\n\nprint $responseXML;</code></pre>\n<p>We could add a layer of abstraction, and wrap up the SOAP call within a subroutine, something like:</p>\n<pre class=\"language-text\"><code class=\"language-text\">sub make_request {\n    my $messageXML = shift;\n    my $requestXML = &#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;tcmapi:Message version=&quot;5.0&quot; from=&quot;AndyRowlandsSoapClient&quot; failOnError=&quot;true&quot; xmlns:tcmapi=&quot;http://www.tridion.com/ContentManager/5.0/TCMAPI&quot;&gt;&#39; . $messageXML . &#39;&lt;/tcmapi:Message&gt;&#39;;\n\n    $requestXML =~ s/&quot;/\\\\&quot;/g;\n\n    my $responseXML = `bcclient.exe /h MyTCMHost /u andyrowland /p mypassword /d MYDOMAIN /x &quot;$requestXML&quot;`;\n\n    return XML::Simple::XMLin($responseXML);\n}</code></pre>\n<p>Note the use the module XML::Simple to convert the response XML into a Perl data structure.</p>\n<p>We can then create a succession of subroutines to perform a variery of routine tasks. To get a Tridion item:</p>\n<pre class=\"language-text\"><code class=\"language-text\">sub get_item {\n    my $URI = shift;\n\n    my $messageXML = qq{\n        &lt;tcmapi:Request ID=&quot;GetItemRequest&quot; preserve=&quot;true&quot;&gt;\n        &lt;tcmapi:GetItem itemURI=&quot;$URI&quot; /&gt;\n        &lt;/tcmapi:Request&gt;\n    };\n\n    my $ref = make_request($messageXML);\n\n    if ($ref-&gt;{&#39;tcmapi:Response&#39;}{&#39;success&#39;} eq &#39;true&#39;){\n        return $ref;\n    } else {\n        die &quot;ERROR: Could not get item $URI&quot;;\n    }\n}</code></pre>\n"}}]}}},"context":{}}