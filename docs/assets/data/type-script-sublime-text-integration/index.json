{"hash":"264f590cff87740fcac41480b7d1f4354eb4684c","data":{"post":{"title":"TypeScript Sublime Text integration","path":"/type-script-sublime-text-integration/","date":"8. October 2012","timeToRead":2,"tags":[{"id":"JavaScript","title":"JavaScript","path":"/tag/JavaScript/"}],"description":"Something interesting has happened in the world of JavaScript development. Of all people, the folk at Microsoft have developed TypeScript.","content":"<p>Something interesting has happened in the world of JavaScript development. Of all people, the folk at Microsoft have developed TypeScript. If you’re in to such things, I don’t need to explain further. There is a Visual Studio 2012 plugin, but these days I’ve fallen in love with Sublime Text. Here’s a quick howto on TypeScript development with Sublime Text, specifically on Windows 7.</p>\n<p>First install theNode.jsmsi package. Once installed, open a command prompt and type the following to install the TypeScript compiler:</p>\n<pre class=\"language-text\"><code class=\"language-text\">npm install -g typescript</code></pre>\n<p>Now grab the Sublime Text syntax hightlight definition file from MSDN. Open the zip and copy the <em>typescript.tmplanguage</em> file to your Sublime Text user packages directory. Mine is located in:</p>\n<pre class=\"language-text\"><code class=\"language-text\">C:\\Users\\arowland\\AppData\\Roaming\\Sublime Text 2\\Packages\\User\\</code></pre>\n<p>Now open Sublime Text. Select <strong>Tools -> Build System -> New Build System</strong>. Paste in the following:</p>\n<pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;selector&quot;: &quot;source.ts&quot;,\n    &quot;cmd&quot;: [&quot;tsc.cmd&quot;, &quot;$file&quot;],\n    &quot;file_regex&quot;: &quot;^(.+?) \\\\((\\\\d+),(\\\\d+)\\\\): (.+)$&quot;\n}</code></pre>\n<p>Save this file. Now you can create a new JavaScript file, and save with the .ts extension. The editor will highlight TypeScript code, and allow you to compile to JavaScript by pressing <strong>Ctrl+B</strong>. The build process will create the compiled JavaScript file in the same directory as the source TypeScript.</p>\n<h2 id=\"9-thoughts-on-typescript-sublime-text-integration\"><a href=\"#9-thoughts-on-typescript-sublime-text-integration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9 thoughts on “TypeScript Sublime Text integration”</h2>\n<h3 id=\"ryan-montgomery\"><a href=\"#ryan-montgomery\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ryan Montgomery</h3>\n<p><em>October 10, 2012 at 3:49 pm</em></p>\n<p>If you installed typescript via npm then this will work on mac osx.</p>\n<pre class=\"language-text\"><code class=\"language-text\">{\n    “selector”: “source.ts”,\n    “cmd”: [“tsc”, “$file”],\n    “path”: “/usr/local/bin”,\n    “file_regex”: “^(.+?) \\\\((\\\\d+),(\\\\d+)\\\\): (.+)$”\n}</code></pre>\n<hr>\n<h3 id=\"nigel-ainscoe\"><a href=\"#nigel-ainscoe\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Nigel Ainscoe</h3>\n<p><em>October 10, 2012 at 8:18 pm</em></p>\n<p>Thanks for this, I had to ditch the .cmd in line 3 of the build system so it reads:</p>\n<pre class=\"language-text\"><code class=\"language-text\">“cmd”: [“tsc”, “$file”],</code></pre>\n<p>But being my first time adding to my Sublime2 installation, it was infinitely better than no instructions and I now have beautifully highlighted typescript 🙂</p>\n<hr>\n<h3 id=\"andy-r\"><a href=\"#andy-r\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Andy R</h3>\n<p><em>October 10, 2012 at 9:46 pm</em></p>\n<p>Hi Nigel. That’s what I had initially but had to alter it to get it to build. I’m just glad you’ve got it working.</p>\n<hr>\n<h3 id=\"simo-endre\"><a href=\"#simo-endre\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Simo Endre</h3>\n<p><em>October 11, 2012 at 7:30 am</em></p>\n<p>This is a great future to have on Sublime Text editor, only the auto-completion is missing completely, which pretty shame. To automatize even more the ts=>js process you can install a little build package. I’ve explained here: <a href=\"http://stackoverflow.com/questions/12799237/how-to-watch-and-compile-all-typescript-sources/12800090#12800090\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://stackoverflow.com/questions/12799237/how-to-watch-and-compile-all-typescript-sources/12800090#12800090</a></p>\n<hr>\n<h3 id=\"larry\"><a href=\"#larry\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Larry</h3>\n<p><em>October 11, 2012 at 4:03 pm</em></p>\n<p>The build script is working (Windows), but I’m not seeing any output in the build results when the compilation fails. Any idea why?</p>\n<hr>\n<h3 id=\"eran-medan\"><a href=\"#eran-medan\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Eran Medan</h3>\n<p><em>November 17, 2012 at 3:11 am</em></p>\n<p>I’ve created a small package that includes the build system + the syntax highlighter\nWould you please review this: <a href=\"https://github.com/eranation/sublime-text-2-typescript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/eranation/sublime-text-2-typescript</a>\nHope I did it right... feel free to modify</p>\n<hr>\n<h3 id=\"adongo\"><a href=\"#adongo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Adongo</h3>\n<p><em>June 6, 2016 at 10:33 pm</em></p>\n<pre class=\"language-text\"><code class=\"language-text\">{\n    “cmd”: [“tsc”,”$file”],\n    “file_regex”: “(.*\\\\.ts?)\\\\s\\\\(([0-9]+)\\\\,([0-9]+)\\\\)\\\\:\\\\s(…*?)$”,\n    “selector”: “source.ts”,\n    “windows”: {\n        “cmd”: [“tsc.cmd”, “$file”]\n    }\n}</code></pre>\n<hr>\n<h3 id=\"adongo-1\"><a href=\"#adongo-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Adongo</h3>\n<p><em>June 6, 2016 at 10:34 pm</em></p>\n<p>This worked for me perfectly</p>\n<hr>\n<h3 id=\"romes\"><a href=\"#romes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Romes</h3>\n<p><em>October 25, 2017 at 6:03 pm</em></p>\n<p>Tanks my friend !</p>\n<hr>\n","cover_image":null}},"context":{}}